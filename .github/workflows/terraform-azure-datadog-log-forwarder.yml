name: 'terraform-azure-datadog-log-forwarder'

on:
  push:
    paths:
    - 'terraform-azure-datadog-log-forwarder/**'
    - '.github/workflows/terraform-azure-datadog-log-forwarder.yml'
    branches:
    - main
  pull_request:
    paths:
    - 'terraform-azure-datadog-log-forwarder/**'
    - '.github/workflows/terraform-azure-datadog-log-forwarder.yml'

defaults:
  run:
    working-directory: terraform-azure-datadog-log-forwarder
    shell: bash

jobs:
  terraform:
    name: 'terraform-azure-datadog-log-forwarder'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.7

    # Copy test provider definition
    - name: Copy test providers
      run: cp ../test/*.tf .

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Checks, where configuration is syntactically valid and internally consistent
    - name: Terraform Validate
      run: terraform validate

  node:
    name: 'node-azure-datadog-log-forwarder'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js environment
      uses: actions/setup-node@v2.1.5
      with:
        node-version: 14

    - name: test module
      run: |
        cd sub-modules/forwarder-azure-resources/azure-datadog-log-forwarder
        npm ci
        npm test




